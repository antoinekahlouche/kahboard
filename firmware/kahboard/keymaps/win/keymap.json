{
    "version": 1,
    "notes": "My awesome keymap",
    "documentation": "\"This file is a QMK Configurator export. You can import this at <https://config.qmk.fm>. It can also be used directly with QMK's source code.\n\nTo setup your QMK environment check out the tutorial: <https://docs.qmk.fm/#/newbs>\n\nYou can convert this file to a keymap.c using this command: `qmk json2c {keymap}`\n\nYou can compile this keymap using this command: `qmk compile {keymap}`\"\n",
    "keyboard": "kahboard",
    "keymap": "default",
    "layout": "LAYOUT_split_3x5_2",
    "layers": [
        [
            "KC_Q", "KC_W", "KC_E", "KC_R", "KC_T",                             "KC_Y", "KC_U", "KC_I", "KC_O", "KC_QUOT", 
            "KC_A", "CTL_T(KC_S)", "OPT_T(KC_D)", "CMD_T(KC_F)", "KC_G",        "KC_H", "CMD_T(KC_J)", "OPT_T(KC_K)", "CTL_T(KC_L)", "KC_SCLN",
            "KC_Z", "KC_X", "KC_C", "KC_V", "KC_B",                             "KC_N", "KC_M", "KC_COMM", "KC_DOT", "S(KC_SLSH)",
            "LT(2, KC_TAB)", "LT(1, KC_BSPC)",                                   "LT(4, KC_SPC)", "LT(3, KC_ENT)"
        ],
        [
            "S(KC_Q)", "S(KC_W)", "S(KC_E)", "S(KC_R)", "S(KC_T)",              "S(KC_Y)", "S(KC_U)", "S(KC_I)", "S(KC_O)", "S(KC_QUOT)", 
            "S(KC_A)", "S(KC_S)", "S(KC_D)", "S(KC_F)", "S(KC_G)",              "S(KC_H)", "S(KC_J)", "S(KC_K)", "S(KC_L)", "S(KC_SCLN)",
            "S(KC_Z)", "S(KC_X)", "S(KC_C)", "S(KC_V)", "S(KC_B)",              "S(KC_N)", "S(KC_M)", "KC_P", "S(KC_P)", "S(KC_1)",
            "S(KC_TAB)", "KC_NO",                                               "S(KC_SPC)", "S(KC_ENT)"
        ],
        [
            "S(KC_2)", "S(KC_3)", "A(S(KC_2))", "S(KC_4)", "S(KC_5)",           "KC_NO", "KC_EQL", "KC_MINS", "S(KC_EQL)", "KC_GRV",
            "S(KC_COMM)", "S(KC_DOT)", "S(KC_9)", "S(KC_0)", "S(KC_7)",         "S(KC_BSLS)", "S(KC_LBRC)", "S(KC_RBRC)", "KC_LBRC", "KC_RBRC",
            "A(KC_I)", "A(KC_L)", "A(KC_C)", "A(KC_K)", "A(KC_GRV)",            "S(KC_GRV)", "S(KC_MINS)", "KC_SLSH", "S(KC_8)", "KC_NO",
            "KC_NO", "KC_DEL",                                                   "G(C(KC_SPC))", "KC_NO"
        ],
        [
            "KC_NO", "KC_NO", "KC_NO","KC_NO", "KC_NO",                         "KC_NO", "KC_MPRV", "KC_VOLD", "KC_VOLU", "KC_MNXT",
            "KC_ESC", "KC_RCTL", "KC_LOPT", "KC_LCMD", "KC_NO",                 "KC_NO", "KC_LEFT", "KC_DOWN", "KC_UP", "KC_RIGHT",
            "KC_NO", "KC_NO", "KC_NO", "KC_NO", "KC_NO",                        "KC_NO", "KC_MUTE", "KC_MPLY", "KC_NO", "KC_NO",
            "KC_PSCR", "KC_LSFT",                                               "KC_NO", "KC_NO"
        ],
        [
            "KC_F1", "KC_F2", "KC_F3", "KC_F4", "KC_F5",                        "KC_NO", "KC_P7", "KC_P8", "KC_P9", "KC_NO",
            "KC_F6", "KC_F7", "KC_F8", "KC_F9", "KC_F10",                       "KC_P0", "KC_P4", "KC_P5", "KC_P6", "KC_NO",
            "KC_F11", "KC_F12", "KC_F13", "KC_F14", "KC_F15",                   "KC_NO", "KC_P1", "KC_P2", "KC_P3", "KC_NO",
            "KC_NO", "KC_NO",                                                   "KC_NO", "KC_NO"
        ]
      ],
    "author": "@antoinekahlouche"
}
